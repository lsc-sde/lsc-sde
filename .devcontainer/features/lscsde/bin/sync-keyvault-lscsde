#!/bin/bash

. /etc/lscsde/setup/environment

usage() { echo "Usage: $0 -v <vault name> -e <environment name>" 1>&2; exit 1; }

SECRET_NAME="*"
FORCE_UPDATE=0

while getopts ":v:e:n:f" o; do
    case "${o}" in
        v)
            VAULT_NAME=${OPTARG}
            ;;
        e)
            ENVIRONMENT_NAME=${OPTARG}
            ;;
        n)
            SECRET_NAME=${OPTARG}
            ;;
        f)
            FORCE_UPDATE=1
            ;;
        *)
            usage
            ;;
    esac
done
shift $((OPTIND-1))

if [ -z "${VAULT_NAME}" ] || [ -z "${ENVIRONMENT_NAME}" ]; then
    usage
fi

for FILE_PATH in ${SECRETS_PATH}/${SECRET_NAME}; do
    if [[ $FILE_PATH != *\~ ]] && [ ! -d $FILE_PATH ]; then
        FILE_NAME=$(basename $FILE_PATH)
        echo "Checking ${FILE_NAME} in vault ${VAULT_NAME}"
        VALUE_FILE=$FILE_PATH        
        ENV_FILE_NAME="${SECRETS_PATH}/${ENVIRONMENT_NAME}/${FILE_NAME}"
        if [ -f "${ENV_FILE_NAME}" ]; then
            VALUE_FILE="${ENV_FILE_NAME}"
        fi

        ENTRY_EXISTS=$(az keyvault secret list --vault-name "${VAULT_NAME}" | jq ".[] | select(.name == \"${FILE_NAME}\") | .name" -r)
        if [ $? -eq 0 ] && [ -z "${ENTRY_EXISTS}" ]; then
            echo "Using value for secret \"${FILE_NAME}\" from ${VALUE_FILE}"
            az keyvault secret set --vault-name "${VAULT_NAME}" --name "${FILE_NAME}" --file "${VALUE_FILE}" -o none
        elif [ $FORCE_UPDATE -eq 1 ]; then 
            echo "Forcing update of \"${FILE_NAME}\" using value from ${VALUE_FILE}"
            az keyvault secret set --vault-name "${VAULT_NAME}" --name "${FILE_NAME}" --file "${VALUE_FILE}" -o none
        else
            echo "Entry for ${FILE_NAME} already exists"
        fi
    fi
done

for SECRET in $(az keyvault secret list --vault-name lscsdestg-kvlt | jq ".[].name" -r); do
    ENV_FILE_NAME="${SECRETS_PATH}/${ENVIRONMENT_NAME}/${SECRET}"
    if [ ! -f "${ENV_FILE_NAME}" ]; then
        echo "Downloading ${SECRET} to local configuration"
        az keyvault secret show --vault-name "${VAULT_NAME}" --name "${SECRET}" | jq '.value' -j > $ENV_FILE_NAME
    else
        echo "Secret ${SECRET} already exists in local configuration"
    fi
done