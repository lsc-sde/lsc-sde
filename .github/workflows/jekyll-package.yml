# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Package Jekyll Package

on:
  workflow_call:
  push:
    branches-ignore:
      - "main"
    paths:
      - "docs/**"

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: docs

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: 'true'
      
      - name: Copy submodule docs 
        working-directory: '${{ github.workspace }}'
        run: |
          export ITEMS=$(find -regex "\./.*/docs" | grep -v "imported" | grep -v "legacy")
          for ITEM in $ITEMS; do
            mkdir -p "./docs/imported/${ITEM}"
            cp -Rv "${ITEM}" "./docs/imported/${ITEM}/../"
          done
       


      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
          working-directory: '${{ github.workspace }}/docs'
          
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3

      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v1
        with:
          path: "docs/_site/"