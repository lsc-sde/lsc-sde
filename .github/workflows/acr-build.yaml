on:
  workflow_call:
    inputs:
      repository:
        required: true
        type: string
      imageName:
        required: true
        type: string
      azureClientId:
        required: true
        type: string
      azureSubscriptionId:
        required: true
        type: string
      azureTenantId:
        required: true
        type: string
      azureContainerRegistry:
        required: true
        type: string
      azureKeyVault:
        required: true
        type: string
      version:
        required: true
        type: string
      baseImage:
        required: true
        type: string
      folder:
        required: false
        type: string
        default: ./
          
jobs:
  build:
    runs-on: [lsc-sde]
    steps:
    - uses: actions/checkout@v3

    - name: 'install prerequisites'
      working-directory: ${{ inputs.folder }}
      run: |
        apt-get update
        apt-get install ca-certificates curl apt-transport-https lsb-release gnupg -y

    - name: 'install img'
      working-directory: ${{ inputs.folder }}
      run: |
        # Export the sha256sum for verification.
        export IMG_SHA256="cc9bf08794353ef57b400d32cd1065765253166b0a09fba360d927cfbd158088"

        # Download and check the sha256sum.
        curl -fSL "https://github.com/genuinetools/img/releases/download/v0.5.11/img-linux-amd64" -o "/usr/local/bin/img" \
          && echo "${IMG_SHA256}  /usr/local/bin/img" | sha256sum -c - \
          && chmod a+x "/usr/local/bin/img"

    - name: 'install azure cli'
      working-directory: ${{ inputs.folder }}
      run: |
        mkdir -p /etc/apt/keyrings
        curl -sLS https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor | tee /etc/apt/keyrings/microsoft.gpg > /dev/null
        chmod go+r /etc/apt/keyrings/microsoft.gpg
        AZ_DIST=$(lsb_release -cs)
        echo "deb [arch=`dpkg --print-architecture` signed-by=/etc/apt/keyrings/microsoft.gpg] https://packages.microsoft.com/repos/azure-cli/ $AZ_DIST main" | tee /etc/apt/sources.list.d/azure-cli.list
        apt-get update
        apt-get install azure-cli -y
        
    - name: 'login to azure'
      working-directory: ${{ inputs.folder }}
      run: |
        az login --identity --username ${{ inputs.azureClientId }}
        
    - name: 'login to azure container registry'
      working-directory: ${{ inputs.folder }}
      run: |
        ACR_USERNAME=$(az keyvault secret show --vault-name ${{ inputs.azureKeyVault }} --name AcrAdminUserName --query "value" -o tsv)
        ACR_PASSWORD=$(az keyvault secret show --vault-name ${{ inputs.azureKeyVault }} --name AcrAdminPassword --query "value" -o tsv)
        echo "Logging in to ${{ inputs.azureContainerRegistry }} as username: ${ACR_USERNAME}"
        
        #ACR_TOKEN=$(az acr login --name ${{ inputs.azureContainerRegistry }} --username "${ACR_USERNAME}" --password "${ACR_PASSWORD}" -t)
        echo $ACR_PASSWORD | img login -u "${ACR_USERNAME}" --password-stdin "${{ inputs.azureContainerRegistry }}.azurecr.io"

    - name: 'pull base image'
      working-directory: ${{ inputs.folder }}
      run: |
        img pull ${{ inputs.baseImage }}
          
    - name: 'img build'
      working-directory: ${{ inputs.folder }}
      run: |
        img build . \
          -t ${{ inputs.azureContainerRegistry }}.azurecr.io/${{ inputs.repository }}/${{ inputs.imageName }}:${{ inputs.version }}
        
    - name: 'img push'
      working-directory: ${{ inputs.folder }}
      run: |
        img push ${{ inputs.azureContainerRegistry }}.azurecr.io/${{ inputs.repository }}/${{ inputs.imageName }}:${{ inputs.version }}
        